C51 COMPILER V9.60.7.0   MAIN                                                              05/30/2025 23:26:16 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: D:\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\main.lst) TA
                    -BS(2) OBJECT(.\Objects\main.obj)

line level    source

   1          #include <reg52.h>
   2          #include <intrins.h>
   3          
   4          // SPI bit-bang pin definitions
   5          sbit SPI_MOSI = P2^0;
   6          sbit SPI_MISO = P2^1;
   7          sbit SPI_SCLK = P2^2;
   8          sbit SPI_CS   = P2^3;   // Chip-select (active low)
   9          
  10          // ——— Tiny µs delay ———
  11          void delay_us(unsigned int us) {
  12   1          while (us--) {
  13   2              _nop_();
  14   2              _nop_();
  15   2          }
  16   1      }
  17          
  18          // ——— UART @9600bps setup ———
  19          void uart_init(void) {
  20   1          TMOD |= 0x20;         // Timer1 Mode 2 (8-bit auto-reload)
  21   1          TH1 = TL1 = 0xFD;     // 9600 baud @11.0592MHz
  22   1          SCON = 0x50;          // Serial mode 1, REN enabled
  23   1          TR1  = 1;             // Start Timer1
  24   1      }
  25          
  26          void uart_send_char(char c) {
  27   1          SBUF = c;
  28   1          while (!TI);
  29   1          TI = 0;
  30   1      }
  31          
  32          void uart_send_str(const char *s) {
  33   1          while (*s) uart_send_char(*s++);
  34   1      }
  35          
  36          void uart_send_hex(unsigned char b) {
  37   1          const char hex[] = "0123456789ABCDEF";
  38   1          uart_send_char(hex[b >> 4]);
  39   1          uart_send_char(hex[b & 0x0F]);
  40   1      }
  41          
  42          // ——— SPI Init ———
  43          void spi_init(void) {
  44   1          SPI_CS   = 1;  // Deselect
  45   1          SPI_SCLK = 0;  // Clock idle low
  46   1      }
  47          
  48          // ——— SPI Transfer (Send + Receive) ———
  49          unsigned char spi_transfer_byte(unsigned char byte_out) {
  50   1          unsigned char i, byte_in = 0;
  51   1          SPI_CS = 0;
  52   1      
  53   1          for (i = 0; i < 8; i++) {
  54   2              // Send MSB first
C51 COMPILER V9.60.7.0   MAIN                                                              05/30/2025 23:26:16 PAGE 2   

  55   2              SPI_MOSI = (byte_out & 0x80) ? 1 : 0;
  56   2              byte_out <<= 1;
  57   2      
  58   2              // Clock high
  59   2              SPI_SCLK = 1;
  60   2              delay_us(5);
  61   2      
  62   2              // Read MISO
  63   2              byte_in <<= 1;
  64   2              if (SPI_MISO) byte_in |= 1;
  65   2      
  66   2              // Clock low
  67   2              SPI_SCLK = 0;
  68   2              delay_us(5);
  69   2          }
  70   1      
  71   1          SPI_CS = 1;
  72   1          return byte_in;
  73   1      }
  74          
  75          // ——— Main Function ———
  76          void main(void) {
  77   1          unsigned char tx = 0xA5;
  78   1          unsigned char rx;
  79   1      
  80   1          uart_init();
  81   1          spi_init();
  82   1      
  83   1          uart_send_str("SPI Loopback Test\r\n");
  84   1          uart_send_str("Sending 0xA5 ... ");
  85   1      
  86   1          rx = spi_transfer_byte(tx);
  87   1      
  88   1          uart_send_str("Received 0x");
  89   1          uart_send_hex(rx);
  90   1          uart_send_str("\r\n");
  91   1      
  92   1          while (1);
  93   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    242    ----
   CONSTANT SIZE    =     70    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      21
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
